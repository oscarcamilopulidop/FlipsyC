type USER {
  idUser: ID!
  nickname: String!
  name: String!
  lastName: String!
  phoneNumber: Int
  birthDate: String!
  email: String!
  gender: String!
  emailNotifications: Boolean!
  picturePath: String
  purpose: String
  owns: [OWNS_FCG]
  observing: [IS_OBSERVING_GFC]
}

type FC {
  idFc: ID!
  front: String!
  back: String!
  lastModifyDate: String!
  creationDate: String!
  comments: String
  contatins: [CONTAINS_FC]
}

type FCGroup {
  idFcg: ID!
  title: String!
  retentive: Float
  public: Boolean!
  isStudying: Boolean!
  lastModifyDate: String!
  creationDate: String!
  specificTags: [String!]
  remainingNotifications: Int
}

type CAT{
  id: ID!
  name: String!
}

type SCAT{
  id: ID!
  name: String!
  commonTags: [String!]
}

##RELATIONSHIPS

type OWNS_FCG @relation(names: "OWNS_FCG"){
  from: USER
  to: FCGroup
}
type CONTAINS_FC @relation(names: "CONTAINS_FC"){
  from: FCGroup
  to: FC
}
type  IS_OBSERVING_GFC @relation(names: "IS_OBSERVING_GFC"){
  from: USER
  to: FCGroup
}